#!/usr/bin/env bash
# Does the following:
#   When passing the argument start:
#     Starts manage_my_process
#     Creates a file containing its PID in /var/run/my_process.pid
#     Displays "manage_my_process started"
#   When passing the argument stop:
#     Stops manage_my_process
#     Deletes the file /var/run/my_process.pid
#     Displays "manage_my_process stopped"
#   When passing the argument restart:
#     Stops manage_my_process
#     Deletes the file /var/run/my_process.pid
#     Starts manage_my_process
#     Creates a file containing its PID in /var/run/my_process.pid
#     Displays "manage_my_process restarted"
#   Displays "Usage: manage_my_process {start|stop|restart}" if any other argument or no argument is passed

# Function to start manage_my_process
start_process() {
    if [ -f "/var/run/my_process.pid" ]; then
        echo "manage_my_process is already running."
    else
        ./manage_my_process &
        echo $! > /var/run/my_process.pid
        echo "manage_my_process started"
    fi
}

# Function to stop manage_my_process
stop_process() {
    if [ -f "/var/run/my_process.pid" ]; then
        pid=$(cat /var/run/my_process.pid)
        kill $pid
        rm -f /var/run/my_process.pid
        echo "manage_my_process stopped"
    else
        echo "manage_my_process is not running."
    fi
}

# Function to restart manage_my_process
restart_process() {
    stop_process
    start_process
    echo "manage_my_process restarted"
}

# Check for valid arguments
if [ $# -ne 1 ]; then
    echo "Usage: $0 {start|stop|restart}"
    exit 1
fi

case "$1" in
    start)
        start_process
        ;;
    stop)
        stop_process
        ;;
    restart)
        restart_process
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit 0
